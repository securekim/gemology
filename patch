From 3c891602c21bc2e7c5dcd21e8274afe6bcb78718 Mon Sep 17 00:00:00 2001
From: jdcorp <4dream@gmail.com>
Date: Sun, 21 Jul 2019 11:14:30 +0900
Subject: [PATCH] connect_blockchain
​
---
 app.js        | 24 ++++++++++++++++++++----
 blockchain.js | 32 +++++++++++++-------------------
 2 files changed, 33 insertions(+), 23 deletions(-)
​
diff --git a/app.js b/app.js
index 66fddd1..885d0a2 100644
--- a/app.js
+++ b/app.js
@@ -1,7 +1,9 @@
 
 //////////////////
 
-var express = require('express')
+var blockchain = require('./blockchain.js');
+
+var express = require('express');
 var app = express();
 var bodyparser = require('body-parser');
 var urlencodedparser = bodyparser.urlencoded({extended:false})
@@ -17,12 +19,26 @@ app.post('/ajax', urlencodedparser, function (req, res){
 
 ///////////////////
 
-
+app.get('/gemologist/getcodes',urlencodedparser, (req,res)=>{
+    blockchain.gemologist_getList(function(err, resultArr, stderr) {
+        if(err){
+            res.send(500, stderr);
+         }
+         res.send(200, resultArr.toString());  
+       });
+    console.log(req.body);
+});
 
 app.post('/gemologist/report',urlencodedparser, (req,res)=>{
-    //req.body.value
+    var measures = {carat: req.body.carat, cut: req.body.cut.replace(' ',''), clarity: req.body.clarity.replace(' ',''), fluorescence: req.body.fluorescence, priority: req.body.priority};
+    blockchain.gemologist_buyCode(req.body.code, req.body.price, 'gemologist', measures,function(err, stdout, stderr) {
+        if(err){
+            res.send(500, stderr);
+         }
+         res.send(200, stdout);  
+       });
     console.log(req.body);
-    res.send(200, '블록체인에 등록 중입니다. 몇 주만 기다려 주세요.');  
+    res.send(200, '블록체인에 등록 중입니다. 몇 주만 기다려 주세요.');
 });
 
 //다른 경로를 요청했을때, 실제 그 경로에 있는 파일을 전달합니다.
diff --git a/blockchain.js b/blockchain.js
index 8fd5716..972a163 100644
--- a/blockchain.js
+++ b/blockchain.js
@@ -56,13 +56,15 @@ exports.gemologist_buyCode = function(code, price, name, measures, callback){
 };
 
 //getCodes, getCode
-exports.gemologist_getList = async function(callback){
+exports.gemologist_getList = function(callback){
+    var resultArr = new Array();
     getCodes((err, stdout, stderr)=>{
-        if(err) return callback(stdout);
-        var resultArr = [];
-        for(var i in stdout){
-            await getCode(stdout[i], (err, stdout, stderr)=>{
-                if(!err) resultArr.push(stdout);
+        if(err) return callback(stderr);
+        var codes = stdout.split('"');
+        for(var i in codes){
+            if(codes[i].search('\n') != -1) continue;
+            getCode(codes[i], (code)=>{
+                resultArr.push(code.toString());
             })
         }
         callback(err, resultArr, stderr);
@@ -95,32 +97,24 @@ exports.getAccount = function getAccount(name,callback){
 }
 
 function buyCode(code, price, name, callback){
-    exec(nscli+' tx nameservice buy-code '+code+' '+price+'nametoken --from '+name,(err,stdout,stderr)=>{
+    ps.exec(dccli+' tx nameservice buy-code '+code+' '+price+'nametoken --from '+name,(err,stdout,stderr)=>{
         callback(err, stdout, stderr);
     });
 }
 
 function setCode(code, measures, name, callback){
-    exec(nscli+' tx nameservice set-code '+code+' '+measures+' --from '+name, (err, stdout, stderr)=>{
+    ps.exec(dccli+' tx nameservice set-code '+code+' '+measures.carat+' '+measures.cut+' '+measures.clarity+' '+measures.fluorescence+' '+measures.priority+' --from '+name, (err, stdout, stderr)=>{
         callback(err, stdout, stderr);
     })
 }
 
 function getCodes(callback){
-    // [
-    //     "code12",
-    //     "code13"
-    // ]
-    exec(nscli+' query nameservice codes', (err, stdout, stderr)=>{
+    ps.exec(dccli+' query nameservice codes', (err, stdout, stderr)=>{
         callback(err, stdout, stderr);
     })
 }
 
 //nscli query nameservice whichis $code
-function getCode(code){
-    return new Promise((resolve) => {
-        exec(nscli+' query nameservice whichis '+code, (err, stdout, stderr)=>{
-            resolve(err, stdout, stderr);
-        })
-     });
+function getCode(code, callback){
+    return callback(ps.execSync(dccli+' query nameservice whichis '+code));
 }
-- 
2.7.4
